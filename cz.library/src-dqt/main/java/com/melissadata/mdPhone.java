/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.melissadata;

public class mdPhone {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected mdPhone(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(mdPhone obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        mdPhoneJavaWrapperJNI.delete_mdPhone(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public mdPhone() {
    this(mdPhoneJavaWrapperJNI.new_mdPhone(), true);
  }

  public mdPhone.ProgramStatus Initialize(String arg0) {
    return mdPhone.ProgramStatus.swigToEnum(mdPhoneJavaWrapperJNI.mdPhone_Initialize(swigCPtr, this, arg0));
  }

  public String GetInitializeErrorString() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetInitializeErrorString(swigCPtr, this);
  }

  public boolean SetLicenseString(String arg0) {
    return mdPhoneJavaWrapperJNI.mdPhone_SetLicenseString(swigCPtr, this, arg0);
  }

  public String GetLicenseExpirationDate() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetLicenseExpirationDate(swigCPtr, this);
  }

  public String GetBuildNumber() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetBuildNumber(swigCPtr, this);
  }

  public String GetDatabaseDate() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetDatabaseDate(swigCPtr, this);
  }

  public boolean Lookup(String phone, String zip) {
    return mdPhoneJavaWrapperJNI.mdPhone_Lookup__SWIG_0(swigCPtr, this, phone, zip);
  }

  public boolean Lookup(String phone) {
    return mdPhoneJavaWrapperJNI.mdPhone_Lookup__SWIG_1(swigCPtr, this, phone);
  }

  public boolean CorrectAreaCode(String phone, String zip) {
    return mdPhoneJavaWrapperJNI.mdPhone_CorrectAreaCode(swigCPtr, this, phone, zip);
  }

  public double ComputeDistance(double arg0, double arg1, double arg2, double arg3) {
    return mdPhoneJavaWrapperJNI.mdPhone_ComputeDistance(swigCPtr, this, arg0, arg1, arg2, arg3);
  }

  public double ComputeBearing(double arg0, double arg1, double arg2, double arg3) {
    return mdPhoneJavaWrapperJNI.mdPhone_ComputeBearing(swigCPtr, this, arg0, arg1, arg2, arg3);
  }

  public String GetAreaCode() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetAreaCode(swigCPtr, this);
  }

  public String GetNewAreaCode() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetNewAreaCode(swigCPtr, this);
  }

  public String GetPrefix() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetPrefix(swigCPtr, this);
  }

  public String GetSuffix() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetSuffix(swigCPtr, this);
  }

  public String GetExtension() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetExtension(swigCPtr, this);
  }

  public String GetCity() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetCity(swigCPtr, this);
  }

  public String GetState() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetState(swigCPtr, this);
  }

  public String GetCountyFips() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetCountyFips(swigCPtr, this);
  }

  public String GetCountyName() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetCountyName(swigCPtr, this);
  }

  public String GetMsa() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetMsa(swigCPtr, this);
  }

  public String GetPmsa() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetPmsa(swigCPtr, this);
  }

  public String GetTimeZone() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetTimeZone(swigCPtr, this);
  }

  public String GetTimeZoneCode() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetTimeZoneCode(swigCPtr, this);
  }

  public String GetCountryCode() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetCountryCode(swigCPtr, this);
  }

  public String GetLatitude() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetLatitude(swigCPtr, this);
  }

  public String GetLongitude() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetLongitude(swigCPtr, this);
  }

  public String GetDistance() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetDistance(swigCPtr, this);
  }

  public String GetResults() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetResults(swigCPtr, this);
  }

  public String GetResultCodeDescription(String resultCode, mdPhone.ResultCdDescOpt opt) {
    return mdPhoneJavaWrapperJNI.mdPhone_GetResultCodeDescription__SWIG_0(swigCPtr, this, resultCode, opt.swigValue());
  }

  public String GetResultCodeDescription(String resultCode) {
    return mdPhoneJavaWrapperJNI.mdPhone_GetResultCodeDescription__SWIG_1(swigCPtr, this, resultCode);
  }

  public String GetStatusCode() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetStatusCode(swigCPtr, this);
  }

  public String GetErrorCode() {
    return mdPhoneJavaWrapperJNI.mdPhone_GetErrorCode(swigCPtr, this);
  }

  public final static class ProgramStatus {
    public final static mdPhone.ProgramStatus ErrorNone = new mdPhone.ProgramStatus("ErrorNone", mdPhoneJavaWrapperJNI.mdPhone_ErrorNone_get());
    public final static mdPhone.ProgramStatus ErrorOther = new mdPhone.ProgramStatus("ErrorOther");
    public final static mdPhone.ProgramStatus ErrorOutOfMemory = new mdPhone.ProgramStatus("ErrorOutOfMemory");
    public final static mdPhone.ProgramStatus ErrorRequiredFileNotFound = new mdPhone.ProgramStatus("ErrorRequiredFileNotFound");
    public final static mdPhone.ProgramStatus ErrorFoundOldFile = new mdPhone.ProgramStatus("ErrorFoundOldFile");
    public final static mdPhone.ProgramStatus ErrorDatabaseExpired = new mdPhone.ProgramStatus("ErrorDatabaseExpired");
    public final static mdPhone.ProgramStatus ErrorLicenseExpired = new mdPhone.ProgramStatus("ErrorLicenseExpired");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static ProgramStatus swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + ProgramStatus.class + " with value " + swigValue);
    }

    private ProgramStatus(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private ProgramStatus(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private ProgramStatus(String swigName, ProgramStatus swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static ProgramStatus[] swigValues = { ErrorNone, ErrorOther, ErrorOutOfMemory, ErrorRequiredFileNotFound, ErrorFoundOldFile, ErrorDatabaseExpired, ErrorLicenseExpired };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class AccessType {
    public final static mdPhone.AccessType Local = new mdPhone.AccessType("Local", mdPhoneJavaWrapperJNI.mdPhone_Local_get());
    public final static mdPhone.AccessType Remote = new mdPhone.AccessType("Remote");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static AccessType swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + AccessType.class + " with value " + swigValue);
    }

    private AccessType(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private AccessType(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private AccessType(String swigName, AccessType swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static AccessType[] swigValues = { Local, Remote };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class DiacriticsMode {
    public final static mdPhone.DiacriticsMode Auto = new mdPhone.DiacriticsMode("Auto", mdPhoneJavaWrapperJNI.mdPhone_Auto_get());
    public final static mdPhone.DiacriticsMode On = new mdPhone.DiacriticsMode("On");
    public final static mdPhone.DiacriticsMode Off = new mdPhone.DiacriticsMode("Off");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static DiacriticsMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + DiacriticsMode.class + " with value " + swigValue);
    }

    private DiacriticsMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private DiacriticsMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private DiacriticsMode(String swigName, DiacriticsMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static DiacriticsMode[] swigValues = { Auto, On, Off };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class StandardizeMode {
    public final static mdPhone.StandardizeMode ShortFormat = new mdPhone.StandardizeMode("ShortFormat", mdPhoneJavaWrapperJNI.mdPhone_ShortFormat_get());
    public final static mdPhone.StandardizeMode LongFormat = new mdPhone.StandardizeMode("LongFormat");
    public final static mdPhone.StandardizeMode AutoFormat = new mdPhone.StandardizeMode("AutoFormat");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static StandardizeMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + StandardizeMode.class + " with value " + swigValue);
    }

    private StandardizeMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private StandardizeMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private StandardizeMode(String swigName, StandardizeMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static StandardizeMode[] swigValues = { ShortFormat, LongFormat, AutoFormat };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class SuiteParseMode {
    public final static mdPhone.SuiteParseMode ParseSuite = new mdPhone.SuiteParseMode("ParseSuite", mdPhoneJavaWrapperJNI.mdPhone_ParseSuite_get());
    public final static mdPhone.SuiteParseMode CombineSuite = new mdPhone.SuiteParseMode("CombineSuite");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static SuiteParseMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + SuiteParseMode.class + " with value " + swigValue);
    }

    private SuiteParseMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private SuiteParseMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private SuiteParseMode(String swigName, SuiteParseMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static SuiteParseMode[] swigValues = { ParseSuite, CombineSuite };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class AliasPreserveMode {
    public final static mdPhone.AliasPreserveMode ConvertAlias = new mdPhone.AliasPreserveMode("ConvertAlias", mdPhoneJavaWrapperJNI.mdPhone_ConvertAlias_get());
    public final static mdPhone.AliasPreserveMode PreserveAlias = new mdPhone.AliasPreserveMode("PreserveAlias");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static AliasPreserveMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + AliasPreserveMode.class + " with value " + swigValue);
    }

    private AliasPreserveMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private AliasPreserveMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private AliasPreserveMode(String swigName, AliasPreserveMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static AliasPreserveMode[] swigValues = { ConvertAlias, PreserveAlias };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class AutoCompletionMode {
    public final static mdPhone.AutoCompletionMode AutoCompleteSingleSuite = new mdPhone.AutoCompletionMode("AutoCompleteSingleSuite", mdPhoneJavaWrapperJNI.mdPhone_AutoCompleteSingleSuite_get());
    public final static mdPhone.AutoCompletionMode AutoCompleteRangedSuite = new mdPhone.AutoCompletionMode("AutoCompleteRangedSuite");
    public final static mdPhone.AutoCompletionMode AutoCompletePlaceHolderSuite = new mdPhone.AutoCompletionMode("AutoCompletePlaceHolderSuite");
    public final static mdPhone.AutoCompletionMode AutoCompleteNoSuite = new mdPhone.AutoCompletionMode("AutoCompleteNoSuite");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static AutoCompletionMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + AutoCompletionMode.class + " with value " + swigValue);
    }

    private AutoCompletionMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private AutoCompletionMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private AutoCompletionMode(String swigName, AutoCompletionMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static AutoCompletionMode[] swigValues = { AutoCompleteSingleSuite, AutoCompleteRangedSuite, AutoCompletePlaceHolderSuite, AutoCompleteNoSuite };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class ResultCdDescOpt {
    public final static mdPhone.ResultCdDescOpt ResultCodeDescriptionLong = new mdPhone.ResultCdDescOpt("ResultCodeDescriptionLong", mdPhoneJavaWrapperJNI.mdPhone_ResultCodeDescriptionLong_get());
    public final static mdPhone.ResultCdDescOpt ResultCodeDescriptionShort = new mdPhone.ResultCdDescOpt("ResultCodeDescriptionShort");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static ResultCdDescOpt swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + ResultCdDescOpt.class + " with value " + swigValue);
    }

    private ResultCdDescOpt(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private ResultCdDescOpt(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private ResultCdDescOpt(String swigName, ResultCdDescOpt swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static ResultCdDescOpt[] swigValues = { ResultCodeDescriptionLong, ResultCodeDescriptionShort };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
