/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.melissadata;

public class mdEmail {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected mdEmail(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(mdEmail obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        mdEmailJavaWrapperJNI.delete_mdEmail(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public mdEmail() {
    this(mdEmailJavaWrapperJNI.new_mdEmail(), true);
  }

  public boolean SetLicenseString(String License) {
    return mdEmailJavaWrapperJNI.mdEmail_SetLicenseString(swigCPtr, this, License);
  }

  public void SetPathToEmailFiles(String emailDataFiles) {
    mdEmailJavaWrapperJNI.mdEmail_SetPathToEmailFiles(swigCPtr, this, emailDataFiles);
  }

  public mdEmail.ProgramStatus InitializeDataFiles() {
    return mdEmail.ProgramStatus.swigToEnum(mdEmailJavaWrapperJNI.mdEmail_InitializeDataFiles(swigCPtr, this));
  }

  public String GetInitializeErrorString() {
    return mdEmailJavaWrapperJNI.mdEmail_GetInitializeErrorString(swigCPtr, this);
  }

  public String GetBuildNumber() {
    return mdEmailJavaWrapperJNI.mdEmail_GetBuildNumber(swigCPtr, this);
  }

  public String GetDatabaseDate() {
    return mdEmailJavaWrapperJNI.mdEmail_GetDatabaseDate(swigCPtr, this);
  }

  public String GetDatabaseExpirationDate() {
    return mdEmailJavaWrapperJNI.mdEmail_GetDatabaseExpirationDate(swigCPtr, this);
  }

  public String GetLicenseStringExpirationDate() {
    return mdEmailJavaWrapperJNI.mdEmail_GetLicenseStringExpirationDate(swigCPtr, this);
  }

  public boolean VerifyEmail(String email) {
    return mdEmailJavaWrapperJNI.mdEmail_VerifyEmail(swigCPtr, this, email);
  }

  public void SetCorrectSyntax(boolean arg0) {
    mdEmailJavaWrapperJNI.mdEmail_SetCorrectSyntax(swigCPtr, this, arg0);
  }

  public void SetUpdateDomain(boolean arg0) {
    mdEmailJavaWrapperJNI.mdEmail_SetUpdateDomain(swigCPtr, this, arg0);
  }

  public void SetDatabaseLookup(boolean arg0) {
    mdEmailJavaWrapperJNI.mdEmail_SetDatabaseLookup(swigCPtr, this, arg0);
  }

  public void SetFuzzyLookup(boolean arg0) {
    mdEmailJavaWrapperJNI.mdEmail_SetFuzzyLookup(swigCPtr, this, arg0);
  }

  public void SetWSLookup(boolean arg0) {
    mdEmailJavaWrapperJNI.mdEmail_SetWSLookup(swigCPtr, this, arg0);
  }

  public void SetMXLookup(boolean arg0) {
    mdEmailJavaWrapperJNI.mdEmail_SetMXLookup(swigCPtr, this, arg0);
  }

  public void SetStandardizeCasing(boolean arg0) {
    mdEmailJavaWrapperJNI.mdEmail_SetStandardizeCasing(swigCPtr, this, arg0);
  }

  public String GetStatusCode() {
    return mdEmailJavaWrapperJNI.mdEmail_GetStatusCode(swigCPtr, this);
  }

  public String GetErrorCode() {
    return mdEmailJavaWrapperJNI.mdEmail_GetErrorCode(swigCPtr, this);
  }

  public String GetErrorString() {
    return mdEmailJavaWrapperJNI.mdEmail_GetErrorString(swigCPtr, this);
  }

  public long GetChangeCode() {
    return mdEmailJavaWrapperJNI.mdEmail_GetChangeCode(swigCPtr, this);
  }

  public String GetResults() {
    return mdEmailJavaWrapperJNI.mdEmail_GetResults(swigCPtr, this);
  }

  public String GetResultCodeDescription(String resultCode, mdEmail.ResultCdDescOpt opt) {
    return mdEmailJavaWrapperJNI.mdEmail_GetResultCodeDescription__SWIG_0(swigCPtr, this, resultCode, opt.swigValue());
  }

  public String GetResultCodeDescription(String resultCode) {
    return mdEmailJavaWrapperJNI.mdEmail_GetResultCodeDescription__SWIG_1(swigCPtr, this, resultCode);
  }

  public String GetMailBoxName() {
    return mdEmailJavaWrapperJNI.mdEmail_GetMailBoxName(swigCPtr, this);
  }

  public String GetDomainName() {
    return mdEmailJavaWrapperJNI.mdEmail_GetDomainName(swigCPtr, this);
  }

  public String GetTopLevelDomain() {
    return mdEmailJavaWrapperJNI.mdEmail_GetTopLevelDomain(swigCPtr, this);
  }

  public String GetTopLevelDomainDescription() {
    return mdEmailJavaWrapperJNI.mdEmail_GetTopLevelDomainDescription(swigCPtr, this);
  }

  public String GetEmailAddress() {
    return mdEmailJavaWrapperJNI.mdEmail_GetEmailAddress(swigCPtr, this);
  }

  public void SetReserved(String Property, String Value_) {
    mdEmailJavaWrapperJNI.mdEmail_SetReserved(swigCPtr, this, Property, Value_);
  }

  public String GetReserved(String Property_) {
    return mdEmailJavaWrapperJNI.mdEmail_GetReserved(swigCPtr, this, Property_);
  }

  public void SetCachePath(String cachePath) {
    mdEmailJavaWrapperJNI.mdEmail_SetCachePath(swigCPtr, this, cachePath);
  }

  public void SetCacheUse(int cacheUse) {
    mdEmailJavaWrapperJNI.mdEmail_SetCacheUse(swigCPtr, this, cacheUse);
  }

  public final static class ProgramStatus {
    public final static mdEmail.ProgramStatus ErrorNone = new mdEmail.ProgramStatus("ErrorNone", mdEmailJavaWrapperJNI.mdEmail_ErrorNone_get());
    public final static mdEmail.ProgramStatus ErrorOther = new mdEmail.ProgramStatus("ErrorOther");
    public final static mdEmail.ProgramStatus ErrorOutOfMemory = new mdEmail.ProgramStatus("ErrorOutOfMemory");
    public final static mdEmail.ProgramStatus ErrorRequiredFileNotFound = new mdEmail.ProgramStatus("ErrorRequiredFileNotFound");
    public final static mdEmail.ProgramStatus ErrorFoundOldFile = new mdEmail.ProgramStatus("ErrorFoundOldFile");
    public final static mdEmail.ProgramStatus ErrorDatabaseExpired = new mdEmail.ProgramStatus("ErrorDatabaseExpired");
    public final static mdEmail.ProgramStatus ErrorLicenseExpired = new mdEmail.ProgramStatus("ErrorLicenseExpired");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static ProgramStatus swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + ProgramStatus.class + " with value " + swigValue);
    }

    private ProgramStatus(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private ProgramStatus(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private ProgramStatus(String swigName, ProgramStatus swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static ProgramStatus[] swigValues = { ErrorNone, ErrorOther, ErrorOutOfMemory, ErrorRequiredFileNotFound, ErrorFoundOldFile, ErrorDatabaseExpired, ErrorLicenseExpired };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class AccessType {
    public final static mdEmail.AccessType Local = new mdEmail.AccessType("Local", mdEmailJavaWrapperJNI.mdEmail_Local_get());
    public final static mdEmail.AccessType Remote = new mdEmail.AccessType("Remote");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static AccessType swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + AccessType.class + " with value " + swigValue);
    }

    private AccessType(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private AccessType(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private AccessType(String swigName, AccessType swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static AccessType[] swigValues = { Local, Remote };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class DiacriticsMode {
    public final static mdEmail.DiacriticsMode Auto = new mdEmail.DiacriticsMode("Auto", mdEmailJavaWrapperJNI.mdEmail_Auto_get());
    public final static mdEmail.DiacriticsMode On = new mdEmail.DiacriticsMode("On");
    public final static mdEmail.DiacriticsMode Off = new mdEmail.DiacriticsMode("Off");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static DiacriticsMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + DiacriticsMode.class + " with value " + swigValue);
    }

    private DiacriticsMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private DiacriticsMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private DiacriticsMode(String swigName, DiacriticsMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static DiacriticsMode[] swigValues = { Auto, On, Off };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class StandardizeMode {
    public final static mdEmail.StandardizeMode ShortFormat = new mdEmail.StandardizeMode("ShortFormat", mdEmailJavaWrapperJNI.mdEmail_ShortFormat_get());
    public final static mdEmail.StandardizeMode LongFormat = new mdEmail.StandardizeMode("LongFormat");
    public final static mdEmail.StandardizeMode AutoFormat = new mdEmail.StandardizeMode("AutoFormat");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static StandardizeMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + StandardizeMode.class + " with value " + swigValue);
    }

    private StandardizeMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private StandardizeMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private StandardizeMode(String swigName, StandardizeMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static StandardizeMode[] swigValues = { ShortFormat, LongFormat, AutoFormat };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class SuiteParseMode {
    public final static mdEmail.SuiteParseMode ParseSuite = new mdEmail.SuiteParseMode("ParseSuite", mdEmailJavaWrapperJNI.mdEmail_ParseSuite_get());
    public final static mdEmail.SuiteParseMode CombineSuite = new mdEmail.SuiteParseMode("CombineSuite");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static SuiteParseMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + SuiteParseMode.class + " with value " + swigValue);
    }

    private SuiteParseMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private SuiteParseMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private SuiteParseMode(String swigName, SuiteParseMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static SuiteParseMode[] swigValues = { ParseSuite, CombineSuite };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class AliasPreserveMode {
    public final static mdEmail.AliasPreserveMode ConvertAlias = new mdEmail.AliasPreserveMode("ConvertAlias", mdEmailJavaWrapperJNI.mdEmail_ConvertAlias_get());
    public final static mdEmail.AliasPreserveMode PreserveAlias = new mdEmail.AliasPreserveMode("PreserveAlias");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static AliasPreserveMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + AliasPreserveMode.class + " with value " + swigValue);
    }

    private AliasPreserveMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private AliasPreserveMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private AliasPreserveMode(String swigName, AliasPreserveMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static AliasPreserveMode[] swigValues = { ConvertAlias, PreserveAlias };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class AutoCompletionMode {
    public final static mdEmail.AutoCompletionMode AutoCompleteSingleSuite = new mdEmail.AutoCompletionMode("AutoCompleteSingleSuite", mdEmailJavaWrapperJNI.mdEmail_AutoCompleteSingleSuite_get());
    public final static mdEmail.AutoCompletionMode AutoCompleteRangedSuite = new mdEmail.AutoCompletionMode("AutoCompleteRangedSuite");
    public final static mdEmail.AutoCompletionMode AutoCompletePlaceHolderSuite = new mdEmail.AutoCompletionMode("AutoCompletePlaceHolderSuite");
    public final static mdEmail.AutoCompletionMode AutoCompleteNoSuite = new mdEmail.AutoCompletionMode("AutoCompleteNoSuite");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static AutoCompletionMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + AutoCompletionMode.class + " with value " + swigValue);
    }

    private AutoCompletionMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private AutoCompletionMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private AutoCompletionMode(String swigName, AutoCompletionMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static AutoCompletionMode[] swigValues = { AutoCompleteSingleSuite, AutoCompleteRangedSuite, AutoCompletePlaceHolderSuite, AutoCompleteNoSuite };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class ResultCdDescOpt {
    public final static mdEmail.ResultCdDescOpt ResultCodeDescriptionLong = new mdEmail.ResultCdDescOpt("ResultCodeDescriptionLong", mdEmailJavaWrapperJNI.mdEmail_ResultCodeDescriptionLong_get());
    public final static mdEmail.ResultCdDescOpt ResultCodeDescriptionShort = new mdEmail.ResultCdDescOpt("ResultCodeDescriptionShort");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static ResultCdDescOpt swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + ResultCdDescOpt.class + " with value " + swigValue);
    }

    private ResultCdDescOpt(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private ResultCdDescOpt(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private ResultCdDescOpt(String swigName, ResultCdDescOpt swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static ResultCdDescOpt[] swigValues = { ResultCodeDescriptionLong, ResultCodeDescriptionShort };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
