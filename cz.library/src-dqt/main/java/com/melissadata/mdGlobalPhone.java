/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.melissadata;

public class mdGlobalPhone {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected mdGlobalPhone(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(mdGlobalPhone obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        mdPhoneJavaWrapperJNI.delete_mdGlobalPhone(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public mdGlobalPhone() {
    this(mdPhoneJavaWrapperJNI.new_mdGlobalPhone(), true);
  }

  public mdGlobalPhone.ProgramStatus Initialize(String arg0) {
    return mdGlobalPhone.ProgramStatus.swigToEnum(mdPhoneJavaWrapperJNI.mdGlobalPhone_Initialize(swigCPtr, this, arg0));
  }

  public String GetInitializeErrorString() {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetInitializeErrorString(swigCPtr, this);
  }

  public boolean SetLicenseString(String arg0) {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_SetLicenseString(swigCPtr, this, arg0);
  }

  public String GetLicenseExpirationDate() {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetLicenseExpirationDate(swigCPtr, this);
  }

  public String GetBuildNumber() {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetBuildNumber(swigCPtr, this);
  }

  public String GetDatabaseDate() {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetDatabaseDate(swigCPtr, this);
  }

  public boolean Lookup(String phone, String country, String origcountry) {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_Lookup__SWIG_0(swigCPtr, this, phone, country, origcountry);
  }

  public boolean Lookup(String phone, String country) {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_Lookup__SWIG_1(swigCPtr, this, phone, country);
  }

  public boolean Lookup(String phone) {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_Lookup__SWIG_2(swigCPtr, this, phone);
  }

  public boolean LookupNext() {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_LookupNext(swigCPtr, this);
  }

  public String GetPhoneNumber() {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetPhoneNumber(swigCPtr, this);
  }

  public String GetSubscriberNumber() {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetSubscriberNumber(swigCPtr, this);
  }

  public String GetCountry() {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetCountry(swigCPtr, this);
  }

  public String GetCountryCode() {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetCountryCode(swigCPtr, this);
  }

  public String GetInternationalPrefix() {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetInternationalPrefix(swigCPtr, this);
  }

  public String GetNationPrefix() {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetNationPrefix(swigCPtr, this);
  }

  public String GetNationalDestinationCode() {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetNationalDestinationCode(swigCPtr, this);
  }

  public String GetLanguage() {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetLanguage(swigCPtr, this);
  }

  public String GetAdministrativeArea() {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetAdministrativeArea(swigCPtr, this);
  }

  public String GetLocality() {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetLocality(swigCPtr, this);
  }

  public String GetUTC() {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetUTC(swigCPtr, this);
  }

  public String GetDST() {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetDST(swigCPtr, this);
  }

  public String GetLatitude() {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetLatitude(swigCPtr, this);
  }

  public String GetLongitude() {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetLongitude(swigCPtr, this);
  }

  public String GetResults() {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetResults(swigCPtr, this);
  }

  public String GetResultCodeDescription(String resultCode, mdGlobalPhone.ResultCdDescOpt opt) {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetResultCodeDescription__SWIG_0(swigCPtr, this, resultCode, opt.swigValue());
  }

  public String GetResultCodeDescription(String resultCode) {
    return mdPhoneJavaWrapperJNI.mdGlobalPhone_GetResultCodeDescription__SWIG_1(swigCPtr, this, resultCode);
  }

  public final static class ProgramStatus {
    public final static mdGlobalPhone.ProgramStatus ErrorNone = new mdGlobalPhone.ProgramStatus("ErrorNone", mdPhoneJavaWrapperJNI.mdGlobalPhone_ErrorNone_get());
    public final static mdGlobalPhone.ProgramStatus ErrorOther = new mdGlobalPhone.ProgramStatus("ErrorOther");
    public final static mdGlobalPhone.ProgramStatus ErrorOutOfMemory = new mdGlobalPhone.ProgramStatus("ErrorOutOfMemory");
    public final static mdGlobalPhone.ProgramStatus ErrorRequiredFileNotFound = new mdGlobalPhone.ProgramStatus("ErrorRequiredFileNotFound");
    public final static mdGlobalPhone.ProgramStatus ErrorFoundOldFile = new mdGlobalPhone.ProgramStatus("ErrorFoundOldFile");
    public final static mdGlobalPhone.ProgramStatus ErrorDatabaseExpired = new mdGlobalPhone.ProgramStatus("ErrorDatabaseExpired");
    public final static mdGlobalPhone.ProgramStatus ErrorLicenseExpired = new mdGlobalPhone.ProgramStatus("ErrorLicenseExpired");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static ProgramStatus swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + ProgramStatus.class + " with value " + swigValue);
    }

    private ProgramStatus(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private ProgramStatus(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private ProgramStatus(String swigName, ProgramStatus swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static ProgramStatus[] swigValues = { ErrorNone, ErrorOther, ErrorOutOfMemory, ErrorRequiredFileNotFound, ErrorFoundOldFile, ErrorDatabaseExpired, ErrorLicenseExpired };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class AccessType {
    public final static mdGlobalPhone.AccessType Local = new mdGlobalPhone.AccessType("Local", mdPhoneJavaWrapperJNI.mdGlobalPhone_Local_get());
    public final static mdGlobalPhone.AccessType Remote = new mdGlobalPhone.AccessType("Remote");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static AccessType swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + AccessType.class + " with value " + swigValue);
    }

    private AccessType(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private AccessType(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private AccessType(String swigName, AccessType swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static AccessType[] swigValues = { Local, Remote };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class DiacriticsMode {
    public final static mdGlobalPhone.DiacriticsMode Auto = new mdGlobalPhone.DiacriticsMode("Auto", mdPhoneJavaWrapperJNI.mdGlobalPhone_Auto_get());
    public final static mdGlobalPhone.DiacriticsMode On = new mdGlobalPhone.DiacriticsMode("On");
    public final static mdGlobalPhone.DiacriticsMode Off = new mdGlobalPhone.DiacriticsMode("Off");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static DiacriticsMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + DiacriticsMode.class + " with value " + swigValue);
    }

    private DiacriticsMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private DiacriticsMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private DiacriticsMode(String swigName, DiacriticsMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static DiacriticsMode[] swigValues = { Auto, On, Off };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class StandardizeMode {
    public final static mdGlobalPhone.StandardizeMode ShortFormat = new mdGlobalPhone.StandardizeMode("ShortFormat", mdPhoneJavaWrapperJNI.mdGlobalPhone_ShortFormat_get());
    public final static mdGlobalPhone.StandardizeMode LongFormat = new mdGlobalPhone.StandardizeMode("LongFormat");
    public final static mdGlobalPhone.StandardizeMode AutoFormat = new mdGlobalPhone.StandardizeMode("AutoFormat");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static StandardizeMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + StandardizeMode.class + " with value " + swigValue);
    }

    private StandardizeMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private StandardizeMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private StandardizeMode(String swigName, StandardizeMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static StandardizeMode[] swigValues = { ShortFormat, LongFormat, AutoFormat };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class SuiteParseMode {
    public final static mdGlobalPhone.SuiteParseMode ParseSuite = new mdGlobalPhone.SuiteParseMode("ParseSuite", mdPhoneJavaWrapperJNI.mdGlobalPhone_ParseSuite_get());
    public final static mdGlobalPhone.SuiteParseMode CombineSuite = new mdGlobalPhone.SuiteParseMode("CombineSuite");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static SuiteParseMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + SuiteParseMode.class + " with value " + swigValue);
    }

    private SuiteParseMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private SuiteParseMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private SuiteParseMode(String swigName, SuiteParseMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static SuiteParseMode[] swigValues = { ParseSuite, CombineSuite };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class AliasPreserveMode {
    public final static mdGlobalPhone.AliasPreserveMode ConvertAlias = new mdGlobalPhone.AliasPreserveMode("ConvertAlias", mdPhoneJavaWrapperJNI.mdGlobalPhone_ConvertAlias_get());
    public final static mdGlobalPhone.AliasPreserveMode PreserveAlias = new mdGlobalPhone.AliasPreserveMode("PreserveAlias");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static AliasPreserveMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + AliasPreserveMode.class + " with value " + swigValue);
    }

    private AliasPreserveMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private AliasPreserveMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private AliasPreserveMode(String swigName, AliasPreserveMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static AliasPreserveMode[] swigValues = { ConvertAlias, PreserveAlias };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class AutoCompletionMode {
    public final static mdGlobalPhone.AutoCompletionMode AutoCompleteSingleSuite = new mdGlobalPhone.AutoCompletionMode("AutoCompleteSingleSuite", mdPhoneJavaWrapperJNI.mdGlobalPhone_AutoCompleteSingleSuite_get());
    public final static mdGlobalPhone.AutoCompletionMode AutoCompleteRangedSuite = new mdGlobalPhone.AutoCompletionMode("AutoCompleteRangedSuite");
    public final static mdGlobalPhone.AutoCompletionMode AutoCompletePlaceHolderSuite = new mdGlobalPhone.AutoCompletionMode("AutoCompletePlaceHolderSuite");
    public final static mdGlobalPhone.AutoCompletionMode AutoCompleteNoSuite = new mdGlobalPhone.AutoCompletionMode("AutoCompleteNoSuite");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static AutoCompletionMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + AutoCompletionMode.class + " with value " + swigValue);
    }

    private AutoCompletionMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private AutoCompletionMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private AutoCompletionMode(String swigName, AutoCompletionMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static AutoCompletionMode[] swigValues = { AutoCompleteSingleSuite, AutoCompleteRangedSuite, AutoCompletePlaceHolderSuite, AutoCompleteNoSuite };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class ResultCdDescOpt {
    public final static mdGlobalPhone.ResultCdDescOpt ResultCodeDescriptionLong = new mdGlobalPhone.ResultCdDescOpt("ResultCodeDescriptionLong", mdPhoneJavaWrapperJNI.mdGlobalPhone_ResultCodeDescriptionLong_get());
    public final static mdGlobalPhone.ResultCdDescOpt ResultCodeDescriptionShort = new mdGlobalPhone.ResultCdDescOpt("ResultCodeDescriptionShort");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static ResultCdDescOpt swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + ResultCdDescOpt.class + " with value " + swigValue);
    }

    private ResultCdDescOpt(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private ResultCdDescOpt(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private ResultCdDescOpt(String swigName, ResultCdDescOpt swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static ResultCdDescOpt[] swigValues = { ResultCodeDescriptionLong, ResultCodeDescriptionShort };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
