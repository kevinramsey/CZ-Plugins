/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.5
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.melissadata;

public class mdStreet {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected mdStreet(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(mdStreet obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        mdAddrJavaWrapperJNI.delete_mdStreet(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public mdStreet() {
    this(mdAddrJavaWrapperJNI.new_mdStreet(), true);
  }

  public mdStreet.ProgramStatus Initialize(String arg0, String arg1, String arg2) {
    return mdStreet.ProgramStatus.swigToEnum(mdAddrJavaWrapperJNI.mdStreet_Initialize(swigCPtr, this, arg0, arg1, arg2));
  }

  public String GetInitializeErrorString() {
    return mdAddrJavaWrapperJNI.mdStreet_GetInitializeErrorString(swigCPtr, this);
  }

  public String GetDatabaseDate() {
    return mdAddrJavaWrapperJNI.mdStreet_GetDatabaseDate(swigCPtr, this);
  }

  public String GetBuildNumber() {
    return mdAddrJavaWrapperJNI.mdStreet_GetBuildNumber(swigCPtr, this);
  }

  public boolean SetLicenseString(String arg0) {
    return mdAddrJavaWrapperJNI.mdStreet_SetLicenseString(swigCPtr, this, arg0);
  }

  public String GetLicenseExpirationDate() {
    return mdAddrJavaWrapperJNI.mdStreet_GetLicenseExpirationDate(swigCPtr, this);
  }

  public boolean FindStreet(String arg0, String arg1, boolean arg2) {
    return mdAddrJavaWrapperJNI.mdStreet_FindStreet(swigCPtr, this, arg0, arg1, arg2);
  }

  public boolean FindStreetNext() {
    return mdAddrJavaWrapperJNI.mdStreet_FindStreetNext(swigCPtr, this);
  }

  public boolean IsAddressInRange(String arg0, String arg1, String arg2) {
    return mdAddrJavaWrapperJNI.mdStreet_IsAddressInRange(swigCPtr, this, arg0, arg1, arg2);
  }

  public boolean IsAddressInRange2(String arg0, String arg1, String arg2, String arg3) {
    return mdAddrJavaWrapperJNI.mdStreet_IsAddressInRange2(swigCPtr, this, arg0, arg1, arg2, arg3);
  }

  public String GetAutoCompletion(String arg0, String arg1, mdStreet.AutoCompletionMode arg2, boolean arg3) {
    return mdAddrJavaWrapperJNI.mdStreet_GetAutoCompletion(swigCPtr, this, arg0, arg1, arg2.swigValue(), arg3);
  }

  public void ResetAutoCompletion() {
    mdAddrJavaWrapperJNI.mdStreet_ResetAutoCompletion(swigCPtr, this);
  }

  public String GetBaseAlternateIndicator() {
    return mdAddrJavaWrapperJNI.mdStreet_GetBaseAlternateIndicator(swigCPtr, this);
  }

  public String GetLACSIndicator() {
    return mdAddrJavaWrapperJNI.mdStreet_GetLACSIndicator(swigCPtr, this);
  }

  public String GetUrbanizationCode() {
    return mdAddrJavaWrapperJNI.mdStreet_GetUrbanizationCode(swigCPtr, this);
  }

  public String GetUrbanizationName() {
    return mdAddrJavaWrapperJNI.mdStreet_GetUrbanizationName(swigCPtr, this);
  }

  public String GetLastLineNumber() {
    return mdAddrJavaWrapperJNI.mdStreet_GetLastLineNumber(swigCPtr, this);
  }

  public String GetAddressType() {
    return mdAddrJavaWrapperJNI.mdStreet_GetAddressType(swigCPtr, this);
  }

  public String GetCongressionalDistrict() {
    return mdAddrJavaWrapperJNI.mdStreet_GetCongressionalDistrict(swigCPtr, this);
  }

  public String GetCountyFips() {
    return mdAddrJavaWrapperJNI.mdStreet_GetCountyFips(swigCPtr, this);
  }

  public String GetCompany() {
    return mdAddrJavaWrapperJNI.mdStreet_GetCompany(swigCPtr, this);
  }

  public String GetCarrierRoute() {
    return mdAddrJavaWrapperJNI.mdStreet_GetCarrierRoute(swigCPtr, this);
  }

  public String GetZip() {
    return mdAddrJavaWrapperJNI.mdStreet_GetZip(swigCPtr, this);
  }

  public String GetDeliveryInstallation() {
    return mdAddrJavaWrapperJNI.mdStreet_GetDeliveryInstallation(swigCPtr, this);
  }

  public String GetPlus4High() {
    return mdAddrJavaWrapperJNI.mdStreet_GetPlus4High(swigCPtr, this);
  }

  public String GetPlus4Low() {
    return mdAddrJavaWrapperJNI.mdStreet_GetPlus4Low(swigCPtr, this);
  }

  public String GetSuiteRangeOddEven() {
    return mdAddrJavaWrapperJNI.mdStreet_GetSuiteRangeOddEven(swigCPtr, this);
  }

  public String GetSuiteRangeHigh() {
    return mdAddrJavaWrapperJNI.mdStreet_GetSuiteRangeHigh(swigCPtr, this);
  }

  public String GetSuiteRangeLow() {
    return mdAddrJavaWrapperJNI.mdStreet_GetSuiteRangeLow(swigCPtr, this);
  }

  public String GetSuiteName() {
    return mdAddrJavaWrapperJNI.mdStreet_GetSuiteName(swigCPtr, this);
  }

  public String GetPostDirection() {
    return mdAddrJavaWrapperJNI.mdStreet_GetPostDirection(swigCPtr, this);
  }

  public String GetSuffix() {
    return mdAddrJavaWrapperJNI.mdStreet_GetSuffix(swigCPtr, this);
  }

  public String GetStreetName() {
    return mdAddrJavaWrapperJNI.mdStreet_GetStreetName(swigCPtr, this);
  }

  public String GetPreDirection() {
    return mdAddrJavaWrapperJNI.mdStreet_GetPreDirection(swigCPtr, this);
  }

  public String GetPrimaryRangeOddEven() {
    return mdAddrJavaWrapperJNI.mdStreet_GetPrimaryRangeOddEven(swigCPtr, this);
  }

  public String GetPrimaryRangeHigh() {
    return mdAddrJavaWrapperJNI.mdStreet_GetPrimaryRangeHigh(swigCPtr, this);
  }

  public String GetPrimaryRangeLow() {
    return mdAddrJavaWrapperJNI.mdStreet_GetPrimaryRangeLow(swigCPtr, this);
  }

  public final static class ProgramStatus {
    public final static mdStreet.ProgramStatus ErrorNone = new mdStreet.ProgramStatus("ErrorNone", mdAddrJavaWrapperJNI.mdStreet_ErrorNone_get());
    public final static mdStreet.ProgramStatus ErrorOther = new mdStreet.ProgramStatus("ErrorOther");
    public final static mdStreet.ProgramStatus ErrorOutOfMemory = new mdStreet.ProgramStatus("ErrorOutOfMemory");
    public final static mdStreet.ProgramStatus ErrorRequiredFileNotFound = new mdStreet.ProgramStatus("ErrorRequiredFileNotFound");
    public final static mdStreet.ProgramStatus ErrorFoundOldFile = new mdStreet.ProgramStatus("ErrorFoundOldFile");
    public final static mdStreet.ProgramStatus ErrorDatabaseExpired = new mdStreet.ProgramStatus("ErrorDatabaseExpired");
    public final static mdStreet.ProgramStatus ErrorLicenseExpired = new mdStreet.ProgramStatus("ErrorLicenseExpired");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static ProgramStatus swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + ProgramStatus.class + " with value " + swigValue);
    }

    private ProgramStatus(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private ProgramStatus(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private ProgramStatus(String swigName, ProgramStatus swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static ProgramStatus[] swigValues = { ErrorNone, ErrorOther, ErrorOutOfMemory, ErrorRequiredFileNotFound, ErrorFoundOldFile, ErrorDatabaseExpired, ErrorLicenseExpired };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class AccessType {
    public final static mdStreet.AccessType Local = new mdStreet.AccessType("Local", mdAddrJavaWrapperJNI.mdStreet_Local_get());
    public final static mdStreet.AccessType Remote = new mdStreet.AccessType("Remote");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static AccessType swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + AccessType.class + " with value " + swigValue);
    }

    private AccessType(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private AccessType(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private AccessType(String swigName, AccessType swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static AccessType[] swigValues = { Local, Remote };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class DiacriticsMode {
    public final static mdStreet.DiacriticsMode Auto = new mdStreet.DiacriticsMode("Auto", mdAddrJavaWrapperJNI.mdStreet_Auto_get());
    public final static mdStreet.DiacriticsMode On = new mdStreet.DiacriticsMode("On");
    public final static mdStreet.DiacriticsMode Off = new mdStreet.DiacriticsMode("Off");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static DiacriticsMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + DiacriticsMode.class + " with value " + swigValue);
    }

    private DiacriticsMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private DiacriticsMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private DiacriticsMode(String swigName, DiacriticsMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static DiacriticsMode[] swigValues = { Auto, On, Off };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class StandardizeMode {
    public final static mdStreet.StandardizeMode ShortFormat = new mdStreet.StandardizeMode("ShortFormat", mdAddrJavaWrapperJNI.mdStreet_ShortFormat_get());
    public final static mdStreet.StandardizeMode LongFormat = new mdStreet.StandardizeMode("LongFormat");
    public final static mdStreet.StandardizeMode AutoFormat = new mdStreet.StandardizeMode("AutoFormat");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static StandardizeMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + StandardizeMode.class + " with value " + swigValue);
    }

    private StandardizeMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private StandardizeMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private StandardizeMode(String swigName, StandardizeMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static StandardizeMode[] swigValues = { ShortFormat, LongFormat, AutoFormat };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class SuiteParseMode {
    public final static mdStreet.SuiteParseMode ParseSuite = new mdStreet.SuiteParseMode("ParseSuite", mdAddrJavaWrapperJNI.mdStreet_ParseSuite_get());
    public final static mdStreet.SuiteParseMode CombineSuite = new mdStreet.SuiteParseMode("CombineSuite");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static SuiteParseMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + SuiteParseMode.class + " with value " + swigValue);
    }

    private SuiteParseMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private SuiteParseMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private SuiteParseMode(String swigName, SuiteParseMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static SuiteParseMode[] swigValues = { ParseSuite, CombineSuite };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class AliasPreserveMode {
    public final static mdStreet.AliasPreserveMode ConvertAlias = new mdStreet.AliasPreserveMode("ConvertAlias", mdAddrJavaWrapperJNI.mdStreet_ConvertAlias_get());
    public final static mdStreet.AliasPreserveMode PreserveAlias = new mdStreet.AliasPreserveMode("PreserveAlias");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static AliasPreserveMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + AliasPreserveMode.class + " with value " + swigValue);
    }

    private AliasPreserveMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private AliasPreserveMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private AliasPreserveMode(String swigName, AliasPreserveMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static AliasPreserveMode[] swigValues = { ConvertAlias, PreserveAlias };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class AutoCompletionMode {
    public final static mdStreet.AutoCompletionMode AutoCompleteSingleSuite = new mdStreet.AutoCompletionMode("AutoCompleteSingleSuite", mdAddrJavaWrapperJNI.mdStreet_AutoCompleteSingleSuite_get());
    public final static mdStreet.AutoCompletionMode AutoCompleteRangedSuite = new mdStreet.AutoCompletionMode("AutoCompleteRangedSuite");
    public final static mdStreet.AutoCompletionMode AutoCompletePlaceHolderSuite = new mdStreet.AutoCompletionMode("AutoCompletePlaceHolderSuite");
    public final static mdStreet.AutoCompletionMode AutoCompleteNoSuite = new mdStreet.AutoCompletionMode("AutoCompleteNoSuite");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static AutoCompletionMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + AutoCompletionMode.class + " with value " + swigValue);
    }

    private AutoCompletionMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private AutoCompletionMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private AutoCompletionMode(String swigName, AutoCompletionMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static AutoCompletionMode[] swigValues = { AutoCompleteSingleSuite, AutoCompleteRangedSuite, AutoCompletePlaceHolderSuite, AutoCompleteNoSuite };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class ResultCdDescOpt {
    public final static mdStreet.ResultCdDescOpt ResultCodeDescriptionLong = new mdStreet.ResultCdDescOpt("ResultCodeDescriptionLong", mdAddrJavaWrapperJNI.mdStreet_ResultCodeDescriptionLong_get());
    public final static mdStreet.ResultCdDescOpt ResultCodeDescriptionShort = new mdStreet.ResultCdDescOpt("ResultCodeDescriptionShort");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static ResultCdDescOpt swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + ResultCdDescOpt.class + " with value " + swigValue);
    }

    private ResultCdDescOpt(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private ResultCdDescOpt(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private ResultCdDescOpt(String swigName, ResultCdDescOpt swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static ResultCdDescOpt[] swigValues = { ResultCodeDescriptionLong, ResultCodeDescriptionShort };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class MailboxLookupMode {
    public final static mdStreet.MailboxLookupMode MailboxNone = new mdStreet.MailboxLookupMode("MailboxNone", mdAddrJavaWrapperJNI.mdStreet_MailboxNone_get());
    public final static mdStreet.MailboxLookupMode MailboxExpress = new mdStreet.MailboxLookupMode("MailboxExpress");
    public final static mdStreet.MailboxLookupMode MailboxPremium = new mdStreet.MailboxLookupMode("MailboxPremium");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static MailboxLookupMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + MailboxLookupMode.class + " with value " + swigValue);
    }

    private MailboxLookupMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private MailboxLookupMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private MailboxLookupMode(String swigName, MailboxLookupMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static MailboxLookupMode[] swigValues = { MailboxNone, MailboxExpress, MailboxPremium };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
