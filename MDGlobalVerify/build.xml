<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<project basedir="." default="default" name="MD Global Verify">

	<!-- Look for user-override properties file first -->
	<property file="override.properties"/>
	<!-- set global properties for this build -->
	<property file="build.properties"/>

	<!-- Import the common_build.xml file which contains all the default tasks -->
	<import file="build-res/subfloor.xml"/>

	<!--
       #	Clean
  -->
	<target name="marketplace-clean">

		<delete dir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin" failonerror="false"/>
		<if>
			<available file="${md.cz.marketplace.dir}/ZippedFiles" type="dir"/>
			<then>
				<delete>
					<fileset dir="${md.cz.marketplace.dir}/ZippedFiles" includes="MDGlobalVerify*.zip"/>
				</delete>
			</then>
		</if>
	</target>

	<!--
        # marketplace init
    -->
	<target name="marketplace-init" depends="marketplace-clean">
		<mkdir dir="${md.cz.marketplace.dir}/ZippedFiles" />
		<mkdir dir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin" />
		<mkdir dir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/MDdata" />
		<mkdir dir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/MD" />
		<mkdir dir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/MD/32_bit" />
		<mkdir dir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/MD/64_bit" />
		<mkdir dir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/MD/mac" />
		<mkdir dir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/MD/mac/64_bit" />
		<mkdir dir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/MD/libext" />
		<mkdir dir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/kettle" />
		<mkdir dir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/mdSamples" />
		<mkdir dir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/VCredist" />
		<mkdir dir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/tools" />

	</target>

	<!--
        # Build marketplace zip
    -->
	<target name="build-marketplace-test" depends="install-antcontrib, default">
		<antcall target="build-marketplace" />

	</target>


	<target name="build-marketplace" depends="marketplace-init">

		<copy todir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/JNDI">
			<fileset dir="${md.cz.resourses.dir}/JNDI" includes="*.properties" />
		</copy>

		<copy todir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/MD/32_bit">
			<fileset dir="${md.cz.dll.dir}/32_bit" includes="mdLicense*.dll"/>
			<fileset dir="${md.cz.so.dir}/32_bit" includes="libmdLicense*.so"/>
		</copy>

		<copy todir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/MD/64_bit">
			<fileset dir="${md.cz.dll.dir}/64_bit" includes="mdLicense*.dll"/>
			<fileset dir="${md.cz.dll.dir}/64_bit" includes="mdGlobalAddr*.dll"/>
			<fileset dir="${md.cz.dll.dir}/64_bit" includes="mdAddr.dll"/>
			<fileset dir="${md.cz.dll.dir}/64_bit" includes="mdGeo.dll"/>
			<fileset dir="${md.cz.dll.dir}/64_bit" includes="mdRightFielder.dll"/>

			<fileset dir="${md.cz.so.dir}/64_bit" includes="libmdLicense*.so"/>
		</copy>

		<copy todir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/MD/mac/64_bit">
			<fileset dir="${md.cz.macos.dir}" includes="libmdLicense*.so libmdLicense*.jnilib"/>
		</copy>

<!--
		<copy todir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/MDdata">
			<fileset dir="${md.cz.data.dir}/Profiler" includes="*.dat *.cfg *.mc"/>
		</copy>
-->
		<copy todir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/MD/libext">
			<fileset dir="${czLib.Dir}/bin" includes="*.jar"/>
			<fileset dir="${mdSettings.Dir}/bin" includes="*.jar"/>
			<fileset dir="${czLib.Dir}/lib-md" includes="jna.jar platform.jar"/>
		</copy>

		<copy todir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/MDReporting">
			<fileset dir="${md.cz.resourses.dir}/Reporting_Files" includes="*.prpt" />
		</copy>

		<copy todir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/kettle">
			<fileset dir="${md.cz.property.files.dir}" includes="mdProps.prop"/>
		</copy>

		<copy todir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/tools">
			<fileset dir="${md.cz.tools.dir}" includes="*.*"/>
		</copy>

		<copy todir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/mdSamples">
			<fileset dir="${md.cz.samples.dir}" includes="**/*.*"/>

		</copy>

		<copy todir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/VCredist">
			<fileset dir="${md.cz.resourses.dir}/VCppRuntime" includes="*.exe"/>
		</copy>

		<copy todir="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin">
			<fileset dir="${mdGlobalVerify.Dir}/bin" includes="*.jar"/>
			<fileset dir="${md.cz.version.proto.file}" includes="*ReadMe.txt"/>

		</copy>

		<svn refid="svn.settings">
            <info target="${mdGlobalVerify.Dir}" />
        </svn>

		<copy file="${md.cz.version.proto.file}/version.prototype" tofile="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/version.xml">
		</copy>
		<replace file="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/version.xml" token="MDCBUILD" value="${svn.info.rev}"/>
		<replace file="${md.cz.marketplace.dir}/MDGlobalVerify/MDGlobalVerifyPlugin/version.xml" token="MDCVERSION" value="${md.cz.version}"/>


		<zip destfile="${md.cz.marketplace.dir}/ZippedFiles/MDGlobalVerify-market-${md.cz.version}_${md.cz.build-id}.zip" basedir="${md.cz.marketplace.dir}/MDGlobalVerify" update="true"/>
	</target>
	

	<target name="default" depends="" description="Builds MDGlobalVerify">
		<property name="mdMod" value="MDGlobalVerify_Test(trunk)"/> <!-- default value if set by a calling script this is ignored-->
		<property name="update.dir" value="${mdGlobalVerify.Dir}"/>
		<antcall target="check-classpath"/>
		<antcall target="package" />
	</target>

	<!--
	#	Init
	-->
	<target name="init" depends="clean">
		<mkdir dir="bin" />
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="src">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
			<!--
			<fileset dir="src-report">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
			-->
		</copy>
	</target>

	<!--
	#	Build
	-->
	<target name="build" depends="init">
		<echo message="Building ${mdMod} ..." />
		<javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
			<src path="src" />
			<classpath refid="classpath" />
		</javac>

	</target>


</project>

